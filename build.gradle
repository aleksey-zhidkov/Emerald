apply plugin: 'java'
apply plugin: 'kotlin'

version = '0.4.1'
group = 'lxx'

jar.archiveName = "${group}.${name}_${version}.jar"

buildscript {
    ext.kotlin_version = '0.8.679'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile files('lib/robocode-1.8.2.0.jar')
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    testCompile 'junit:junit:4.11'
}

task generateProperties
generateProperties << {

    def emeraldProperties = file("${sourceSets.main.output.classesDir}/lxx/${project.name}.properties")
    if (!emeraldProperties.parentFile.exists()) {
        emeraldProperties.parentFile.mkdirs()
    }
    def epWriter = emeraldProperties.newWriter()
    epWriter << "robot.description=\n"
    epWriter << "robocode.version=1.8\n"
    epWriter << "robot.java.source.included=true\n"
    epWriter << "robot.version=${project.version}\n"
    epWriter << "robot.author.name=Aleksey Zhidkov\n"
    epWriter << "robot.classname=lxx.${project.name}\n"
    epWriter << "robot.name=${project.name}\n"
    epWriter.flush()
    epWriter.close()
}

task copyKotlinRuntime
copyKotlinRuntime << {
    project.copy {
        from(zipTree("lib/kotlin-runtime.jar"))
        into(sourceSets.main.output.classesDir)
    }
}

task copySources
copySources << {

    project.copy {
        from(sourceSets.main.java)
        into(sourceSets.main.output.classesDir)

        from(sourceSets.main.kotlin)
        into(sourceSets.main.output.classesDir)

    }
}

jar.dependsOn generateProperties
jar.dependsOn copySources
jar.dependsOn copyKotlinRuntime

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

compileKotlin {
    kotlinOptions.annotations = file('annotations/robocode-1.8.2.0')
}